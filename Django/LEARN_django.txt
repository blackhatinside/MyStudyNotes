# project runs in port 8000

# model view template framework
# user request -----> /app_name -----> urls.py
#                                         ^
#                 MVT                     | (rendered HTML)
#                                         |
# http response -----> def home: -----> views.py
# http response ----> class home: ----> views.py
# steps
# 1. start your project
# 2. create your first view
# 3. user templates
# 4. apps and modularization

# start a new django project 'smartnotes' in current directory
django-admin startproject smartnotes .

# run the django project 
python manage.py runserver

# create an app 'home' in the project directory # add it to the project settings file
django-admin startapp home

# make migrations of user changes
python manage.py makemigrations

# send migration of user changes to db # classes --> makemigrations --> migrate --> db
python manage.py migrate

# create superuser for database
python manage.py createsuperuser

# handle models db content through code # alternative to django admin page
python manage.py shell


project_root/
│
├── manage.py
├── CallProcessor/
│   ├── __init__.py
│   ├── settings.py
│   ├── urls.py
│   ├── asgi.py
│   └── wsgi.py
│
└── accounts/
   ├── migrations/
   │   ├── __init__.py
   │   └── 0001_initial.py
   ├── __init__.py
   ├── admin.py
   ├── apps.py
   ├── models.py
   ├── tests.py
   └── views.py

// to start a project in the current dir (project dir)
django-admin startproject CallProcessor .

// to create a new module/app
python manage.py startapp accounts

// to run the project
python manage.py runserver

// to store the changes to make a table into a file
python manage.py makemigrations LoginPage

// to create and execute SQL statement
python manage.py migrate

// to view the executed SQL statement
python manage.py sqlmigrate LoginPage 0001

// to list the project's migrations and their status
python manage.py showmigrations

// to view the SQL queries being performed by Django
python3 manage.py shell_plus --print-sql

